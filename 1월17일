## chat gpt
- Generative(생성 모델), Pre-trained(사전 훈련), Transformer

    → GPT 모델을 기반으로 한 대화형 AI
## API
- Interface : 정보 교환활 때 그 사이에 존재하는 접점, 시스템이 통신하기 위한 수 (리모컨)
- 기본 웹의 구조
    - 클라이언트 → 서버 : 요청 / 서버 → 클라이언트 : 응답
- API : 두 시스템(클라이언트와 서버)이 통신할 수 있게 하는 수단 → GPT API key

- 두 시스템이 무조건 클라이언트와 서버는 X
- ex. 날씨 데이터를 api key를 통해서 받아와라   
  - problem.py(파이썬 파일) → 날씨 데이터 url
  - 요청 보내고 응답 받을 수 있게 하는 수단 : 기상청 사이트의 API key
- UI(User Interface) : 사용자가 소프트웨어에 접근하는 그래픽적, 화면적 요소
    - ex. 브라우저의 버튼, 스마트폰 앱 아이콘
## API key
- API에게 요청을 보내는 애플리케이션을 구별하기 위한 고유한 식별 문자열
- 활용
  1. clien가 날씨 API 사이트에 회원 가입
  2. 날씨 사이트에서 client에게 API key 발급
  3. client가 요청 시 발급받은 API key를 요청마다 함께 보냄
  4. 요청받은 server는 key를 검사해서 인증 혹은 인증 실패 여부를 결정하여 응답
- 필요성
    - 보안 강화 : 무단 접근을 막고, 승인된 사용자만 요청할 수 있도록
    - 데이터 관리
        - API 호출 횟수, 사용량 모니터링
        - 일정량 이상 사용 시 제한 또는 과금 정책 적용 가능
## 클라이언트와 서버
- 클라이언트
  - 웹 브라우저, 모바일 앱 같은 눈에 보이는 것
  - html, css, js
- 서버
  - 웹 서버, 데이터베이스 서버
  - gpt server(chat gpt 3.5 turbo)
- 클라이언트 → 서버 : gpt api key / 서버 → DB(gpt database) : query
- 네이버 로그인 화면을 만든다 ?
  - html : NAVER라는 글자, ID/전화번호라는 글자, 네모칸 틀, 로그인 버튼
  - css : 예쁘게 정렬, 색깔, 언어설정(다양한 언어)
  - javascript : 로그인 로직(조건문) - 비밀번호 틀린 경우 다시 입력받기, 언어 변경시 다른 언어로 변경되게
- chat gpt api 실습 참고